<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Rants on raph haXx </title>
      <generator uri="https://hugo.spf13.com">Hugo</generator>
    <link>http://raph.es/tags/rants/index.xml/</link>
    
    
    <copyright>Raphael Estrada 2011-2014</copyright>
    <updated>Wed, 29 Oct 2014 12:51:58 &#43;0100</updated>
    
    <item>
      <title>The bias is strong with MBTI</title>
      <link>http://raph.es/blog/2014/10/bias-is-strong-with-mbti/</link>
      <pubDate>Wed, 29 Oct 2014 12:51:58 &#43;0100</pubDate>
      
      <guid>http://raph.es/blog/2014/10/bias-is-strong-with-mbti/</guid>
      <description>

&lt;p&gt;Once upon a time, at work, I took a personality test.&lt;/p&gt;

&lt;p&gt;It was a three day course, and the whole team participated. Early on, we took a twenty-minute test and added up the scores to end up with four numbers. Each number tells you where you sit one of four linear scales. Each scale is split through the middle and - depending on which half your number falls on - you get one of two letters per scale.&lt;/p&gt;

&lt;p&gt;The resulting four letters combine to form your &lt;em&gt;Myers-Briggs Type Indicator&lt;/em&gt; (MBTI). By knowing someone&amp;rsquo;s MBTI, you&amp;rsquo;re supposed to be able to better predict and understand another&amp;rsquo;s preferences and behaviour.&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Enterprise&amp;rdquo; loves MBTI because of how it puts people into neatly labelled boxes. Consultants love MBTI because enterprise loves MBTI. Which is why I was sitting in said course.&lt;/p&gt;

&lt;h1 id=&#34;toc_0&#34;&gt;I got &lt;code&gt;INTP&lt;/code&gt;.&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;I&lt;/code&gt;: &lt;strong&gt;i&lt;/strong&gt;ntroverted&lt;/li&gt;
&lt;li&gt;&lt;code&gt;N&lt;/code&gt;: i&lt;strong&gt;n&lt;/strong&gt;tuitive&lt;/li&gt;
&lt;li&gt;&lt;code&gt;T&lt;/code&gt;: &lt;strong&gt;t&lt;/strong&gt;hinking&lt;/li&gt;
&lt;li&gt;&lt;code&gt;P&lt;/code&gt;: &lt;strong&gt;p&lt;/strong&gt;erceiving&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I&amp;rsquo;ll be honest and admit that when I began writing this, I couldn&amp;rsquo;t even remember what the last three stood for. I had to refresh my memory on Wikipedia.&lt;/p&gt;

&lt;h1 id=&#34;toc_1&#34;&gt;25% science.&lt;/h1&gt;

&lt;p&gt;The outcome on the first scale can either be &lt;strong&gt;i&lt;/strong&gt;ntrovert or &lt;strong&gt;e&lt;/strong&gt;xtrovert. In our group, this scale seemed to yield the clearest results. Given that most attendees were software developers, it should come as no surprise that most of us ended up getting &lt;em&gt;I&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Why? There&amp;rsquo;s a large body of research and a variety of literature on the introvert-extrovert spectrum. Software development is consistently described as a field that attracts introverts. So I&amp;rsquo;m going to let this one pass as it&amp;rsquo;s both scientificallly grounded and relevant in day-to-day life.&lt;/p&gt;

&lt;p&gt;I won&amp;rsquo;t reiterate what is already well-described in aforementioned books. But just to give one example, it&amp;rsquo;s why many of us prefer the asynchronous nature of electronic means of communication (i.e. email, chat) over synchronous face-to-face &amp;ldquo;talk&amp;rdquo;.&lt;/p&gt;

&lt;h1 id=&#34;toc_2&#34;&gt;75% percent bullshit.&lt;/h1&gt;

&lt;p&gt;My beef with the other three is not that they don&amp;rsquo;t apply to me. Quite the opposite actually. It&amp;rsquo;s because they are defined in such a way that they apply to &lt;em&gt;everybody&lt;/em&gt; and are inherently context dependant. Testing for them only captures one&amp;rsquo;s preference &lt;em&gt;at the time of the test&lt;/em&gt;, under the conditions of the test. But under different circumstances I might as well come out as the polar opposite.&lt;/p&gt;

&lt;p&gt;At one point we were presented with a hypothetical scenario: you are the coach of a children&amp;rsquo;s football club. You manage to get just two tickets for a big game. How to do you decide who goes, and how do you communicate that to the children?&lt;/p&gt;

&lt;p&gt;According to MBTI, a typical &lt;em&gt;&lt;strong&gt;t&lt;/strong&gt;hinker&lt;/em&gt; would rank kids by some level of skill and reward the best with the tickets. A &lt;em&gt;&lt;strong&gt;f&lt;/strong&gt;eeler&lt;/em&gt; would be more worried about the other kids being sad or dissapointed, and try to work out a more social solution with the group.&lt;/p&gt;

&lt;p&gt;The problem here is, &lt;em&gt;t&lt;/em&gt; and &lt;em&gt;f&lt;/em&gt; are polar opposites of the same scale. I was scored to be a strong &lt;em&gt;t&lt;/em&gt; based on the questions in the test earlier. And yes, the thought of ranking the kids by their dedication to the club did cross my mind. But I was just as concerned about the other kids being dissapointed as the next &lt;em&gt;f&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I had suggested alternatives, one being to take all the other kids to another event rather than not rewarding them at all. However, they depended on variables not provided. The scenario - being part of a pre-defined course programme -  was contrived in order to set the stage for the purposes of MBTI. It lacked much information which would have influenced my solution. Like the number of children, their age, the price of tickets vs family income&amp;hellip;&lt;/p&gt;

&lt;p&gt;But alternatives weren&amp;rsquo;t part of the programme. The trainer made the point she had come to make. And I learned that there is no room for alternatives in the littlle boxes which are MBTI (stereo)types.&lt;/p&gt;

&lt;h1 id=&#34;toc_3&#34;&gt;Life is not linear.&lt;/h1&gt;

&lt;p&gt;A linear scale is simply not sufficient to accomodate this spectrum of decision making. Flattening it all like MBTI does disposes too much information to have relevance in the real world.&lt;/p&gt;

&lt;p&gt;If I was to be generous (which apprarenltly I&amp;rsquo;m not, because I&amp;rsquo;m not a &lt;em&gt;f&lt;/em&gt;) I could admit that MBTI gave a correct prediction that I had &lt;em&gt;considered&lt;/em&gt; the ranking option, and as a result &lt;em&gt;could&lt;/em&gt; have decided something similar. But that&amp;rsquo;s pretty thin, and practically impossible to disprove.&lt;/p&gt;

&lt;p&gt;When people end up doing what MBTI predicted, it appears to confirm the correctness of MBTI. When people decide differently, it&amp;rsquo;s either ignored or handwaived away by the general cop-out:&lt;em&gt;&amp;ldquo;MBTI only describes a preference&amp;rdquo;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;See also: &lt;em&gt;confirmation bias&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I did raise my concerns during the course. The defense was the same every time. Our &amp;ldquo;trainer&amp;rdquo; would argue that MBTI merely describes a &lt;em&gt;preference&lt;/em&gt;, not a general rule (huge red flag). I might have agreed if people hadn&amp;rsquo;t instantly fell into a pattern of reducing others to their scores. &amp;ldquo;&lt;em&gt;P&amp;rsquo;s&lt;/em&gt; do &lt;code&gt;x&lt;/code&gt; while &lt;em&gt;J&amp;rsquo;s&lt;/em&gt; do &lt;code&gt;y&lt;/code&gt;&amp;rdquo;, the trainer would say. So even if we gave MBTI the benefit of the doubt, and went with the &lt;em&gt;preference&lt;/em&gt; hypothesis, in practice it is not used as such. Human minds don&amp;rsquo;t work like that.&lt;/p&gt;

&lt;p&gt;Most of us wore their score like a badge. Literally: many wrote their scores in big letters onto the name signs in front of them. Gradually, people with similar scores formed little teams. In what superficially appeared to be innocent fun, teams ganged up and mocked the others&amp;rsquo; MBTI-stereotypes. &amp;ldquo;Haha, you &lt;em&gt;X&lt;/em&gt; be so crazy.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;See also: &lt;a href=&#34;http://therearenoothers.wordpress.com/2011/12/28/othering-101-what-is-othering/&#34;&gt;othering&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;toc_4&#34;&gt;Pseudo-science is pseudo.&lt;/h1&gt;

&lt;p&gt;The sixteen MBTI type profiles are strangely reminiscent of zodiac signs. They are written in such a way that they could apply to anybody. After we got the hard-earned score, we had a chance to read all profiles. At this point we had already been told what we &amp;ldquo;are&amp;rdquo;, and our minds were already set to read other profiles as if they didn&amp;rsquo;t match.&lt;/p&gt;

&lt;p&gt;I suspect if we had been given the profiles without any prior labelling, it would have been very difficult to find a single one that matches. People would have identified with different profiles under different circumstances. People are not one-dimensional.&lt;/p&gt;

&lt;p&gt;The fine print states MBTI is just a preference, but the scores quickly become comfortable boxes. Once you&amp;rsquo;re convinced that you are an &lt;em&gt;XXXX&lt;/em&gt;, you identify with it so much that you become it. When a situation arises that seems to fit the profile, it&amp;rsquo;s &amp;ldquo;wow, that&amp;rsquo;s obviously because I&amp;rsquo;m X!&amp;rdquo;. When the profile is at odds with behaviour, it is brushed off as an outlier and ignored.&lt;/p&gt;

&lt;p&gt;See also: &lt;a href=&#34;https://en.wikipedia.org/wiki/Astrology_and_science&#34;&gt;astrology&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;See also: &lt;a href=&#34;https://en.wikipedia.org/wiki/Pseudoscience&#34;&gt;pseudo-science&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;toc_5&#34;&gt;Why is MBTI so popular then?&lt;/h1&gt;

&lt;p&gt;Most people enjoy taking personality tests and sharing the outcome. We are quick to identify with the results, especially when they confirm our expectations. Just look at how successful pseudo-scientific tests are in magazine&amp;rsquo;s or social media (i.e. Facebook). MBTI tests or derivatives thereof are very popular on the web.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s easy to do the test. And passing a test gives you a sense of accomplishment. It&amp;rsquo;s fun to label oneself and others. It&amp;rsquo;s fun to make fun people&amp;rsquo;s quirks. It makes sense on the surface and contains just enough science to make it get past our bullshit sensors.&lt;/p&gt;

&lt;p&gt;I buy into the introvert-extrovert spectrum, but the rest is too dynamic for anyone to have a meaningful score. MBTI has very little practical relevance. It oversimplifies human psychology and the complexity of decision making. The resulting simplicity is what makes it so tempting to buy into MBTI. I think it&amp;rsquo;s dangerous how it sets wrong expectations when people use it as a predictor. Which they do, despite the disclaimers.&lt;/p&gt;

&lt;p&gt;So, looking at all this I suppose I&amp;rsquo;m a typical &lt;em&gt;t&lt;/em&gt; after all.&lt;/p&gt;

&lt;p&gt;(Or am I?)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Alcohol sucks</title>
      <link>http://raph.es/blog/2014/10/why-i-dont-drink-alcohol/</link>
      <pubDate>Fri, 24 Oct 2014 17:35:48 IST</pubDate>
      
      <guid>http://raph.es/blog/2014/10/why-i-dont-drink-alcohol/</guid>
      <description>

&lt;p&gt;I spent my teen and early adult life in southern Germany. The area is world famous for it&amp;rsquo;s beer. And alcohol is deeply ingrained in German culture.&lt;/p&gt;

&lt;p&gt;Some years ago - to the surprise of many of my family and friends - I decided to stop drinking alcohol for good. You wouldn&amp;rsquo;t believe how much ridicule I was confronted with. It&amp;rsquo;s scary how prevalent alcohol is in everyday life - something that you only really see when you attempt to avoid it.&lt;/p&gt;

&lt;h1 id=&#34;toc_0&#34;&gt;People ask if I&amp;rsquo;m a recovering alcoholic.&lt;/h1&gt;

&lt;p&gt;I answer no, although answering yes would be easier. It seems like being an alcoholic is the only acceptable reason to not drink for good.&lt;/p&gt;

&lt;p&gt;Society respects the &lt;em&gt;recovering alcoholic&lt;/em&gt;, who has ventured so far into boozeland. Like they crossed some bizarre finish line. Mission accomplished. It&amp;rsquo;s a way of proving one&amp;rsquo;s ability to hold even more alcohol than the other guy. An impressive achievement, apparently. Just listen to friends and family credit each other for how much they were able to drink at that wedding last weekend. For being so hung over.&lt;/p&gt;

&lt;p&gt;A subtle difference compared to the &lt;em&gt;dedicated driver&lt;/em&gt;: the hero-for-a-night who takes on the burden of seeing how stupid his friends behave when they get intoxicated. But only under the condition that someone else drives the next time.&lt;/p&gt;

&lt;p&gt;To clarify my reasoning, I thought I&amp;rsquo;d write a little list of pros and cons.&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;Drinking alcohol CONS&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;- costs a lot of money
- tastes horrible
- it&#39;s literally toxic
- is bad for my health
- makes me fat
- makes me feel sick
- gives me a headache the next day
- lowers my intelligence
- makes me more likely to do dumb things
- prevents me from driving
- decreases my ability to defend myself in case of an attack
- increases the chances of being attacked
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, don&amp;rsquo;t you tell me alcohol doen&amp;rsquo;t taste horrible. It&amp;rsquo;s barely drinkable even when masked by other ingredients (malt, barley in beer; sugar in wine and cocktails). Higher concentrations taste so bad, people frown and gag when they drink it. The only people who enjoy it are either pretending in order to appear tough or maybe alcoholics.&lt;/p&gt;

&lt;p&gt;Sure, if you drink the stuff long enough, you&amp;rsquo;ll learn to distinguish tastes. Some drinks will taste better than others, relatively seen. But objectively, it tastes bad and for a good reason: it&amp;rsquo;s toxic. Our body doesn&amp;rsquo;t want it, so we haven&amp;rsquo;t evolved to get any reward for drinking it.&lt;/p&gt;

&lt;p&gt;Alright, moving on!&lt;/p&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;Drinking alcohol PROS&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;+ complies with social norms
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There you have it. Most of us grow up around adults who drink. We observe and learn that it&amp;rsquo;s what adults are supposed to do in certan situations. It&amp;rsquo;s a social habit that we copy and never question. And which many people make fun of when someone refuses to play along (I know because I&amp;rsquo;m that someone).&lt;/p&gt;

&lt;p&gt;In case you didn&amp;rsquo;t know, I&amp;rsquo;m an &lt;a href=&#34;/on/introverts&#34;&gt;introvert&lt;/a&gt;. I don&amp;rsquo;t enjoy pubs and nights out. With the privilege of hindsight I now understand that the main reason I spent a significant part of my youth going to pubs and drinking alcohol was because I was under the impression that it&amp;rsquo;s what you&amp;rsquo;re supposed to do. And to impress friends. &lt;em&gt;Girls&lt;/em&gt; even.&lt;/p&gt;

&lt;p&gt;That sounds &lt;em&gt;incredibly silly&lt;/em&gt;. And it is. Which is why I stopped! I can socialize without drinking alcohol. I will not perpetuate the synthetic importance of an expensive toxin. Especiallly not to my kids. Oh, and I&amp;rsquo;m beyond the point where I think I have to impress people like that.&lt;/p&gt;

&lt;p&gt;My kids will grow up with me as an example for how you can think for yourself and refuse to do stupid stuff other people do. How you don&amp;rsquo;t have to be a recovering alcoholic to stop drinking.&lt;/p&gt;

&lt;p&gt;Most or all of the above could also be said about smoking. If you don&amp;rsquo;t smoke, you probably shouldn&amp;rsquo;t be drinking for the same reason. Smoking is bad for you? Tastes horrible? Expensive? An excuse to socialize with other smokers? A bad example for kids? Check, check, check, check, check.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m &lt;em&gt;that guy&lt;/em&gt; who orders a pot of tea at the bar. I&amp;rsquo;m not drinking water because I&amp;rsquo;m driving - I&amp;rsquo;m the dedicated driver because I don&amp;rsquo;t drink.&lt;/p&gt;

&lt;p&gt;Get over it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Power to the nerds</title>
      <link>http://raph.es/blog/2012/01/Power-to-the-nerds/</link>
      <pubDate>Wed, 18 Jan 2012 11:31:00 &#43;0100</pubDate>
      
      <guid>http://raph.es/blog/2012/01/Power-to-the-nerds/</guid>
      <description>&lt;figure &gt;
    
    &lt;div class=&#34;video&#34;&gt;
 &lt;iframe class=&#34;youtube-player&#34; type=&#34;text/html&#34; width=&#34;640&#34; height=&#34;385&#34; src=&#34;http://www.youtube.com/embed/1p-TV4jaCMk&#34; allowfullscreen frameborder=&#34;0&#34;&gt;
 &lt;/iframe&gt;
&lt;/div&gt;

&lt;/figure&gt;

&lt;div class=&#34;clearboth&#34;&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Tools given to governments which might seem (somewhat) justified or harmless now
will inevitably be used for worse later.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&amp;ndash;me&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Stop using the wrong tools</title>
      <link>http://raph.es/blog/2011/11/Stop-using-the-wrong-tools/</link>
      <pubDate>Thu, 10 Nov 2011 06:29:00 &#43;0100</pubDate>
      
      <guid>http://raph.es/blog/2011/11/Stop-using-the-wrong-tools/</guid>
      <description>

&lt;p&gt;When Apple gave us pure touchscreen interfaces, it was as if yet &lt;a href=&#34;http://screenrant.com/tech-terminator-iron-man-is-here-brusimm-7985/all/1/&#34;&gt;another&lt;/a&gt; science fiction dream came true. Apparently whenever we get a little bit closer to our sci-fi fantasies, we imagine the future will just take the same idea a bit further. &amp;ldquo;Look ma, no &lt;a href=&#34;http://www.ted.com/talks/john_underkoffler_drive_3d_data_with_a_gesture.html&#34;&gt;hands&lt;/a&gt;!&amp;rdquo; Awesome, no doubt. But the danger of small increments is that it feels like progress, even though you could be heading in the wrong direction.&lt;/p&gt;

&lt;p&gt;Having robot monkey butlers go skynet on mankind makes great fiction. But could our pursuit of Asimov&amp;rsquo;s smart robots really be distracting us from other, entirely different solutions to our monkey butler needs? Like genetically enhanced apes? Sci-fi inspires authors inspire engineers inspire sci-fi. That chain of inspiration has undoubtedly led to some impressive technological &lt;a href=&#34;http://www.youtube.com/watch?v=Bmglbk_Op64&#34;&gt;innovation&lt;/a&gt;. At which point, though, could recycling century-old inspiration from fiction become a bad thing? When should we dismiss them as bad ideas to instead focus our efforts on alternatives?&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m drifting a bit here. The other day I read Bret Victor&amp;rsquo;s &lt;a href=&#34;http://worrydream.com/ABriefRantOnTheFutureOfInteractionDesign/&#34;&gt;opinion&lt;/a&gt; on a very common vision of how we might interact with technology in the future. He argues that when envisioning the designs of the future, people make small increments to present technology and while doing so, tend to forget about what really makes a tool great.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;That is, a tool converts what we can &lt;em&gt;do&lt;/em&gt; into what we &lt;em&gt;want to do&lt;/em&gt;. A great tool is designed to fit &lt;strong&gt;both&lt;/strong&gt; sides.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The touchscreens in modern devices might be closer to what we expect from futuristic high-tech devices. But just because they let us use a mobile web browser more efficiently, does that mean the future will be all chrome and touchscreens?&lt;/p&gt;

&lt;figure &gt;
    
    &lt;figcaption&gt;
        &lt;p&gt;
        Everything is chrome in the future!
        &lt;br/&gt;src:&lt;a href=&#34;http://www.unitedspongebob.com/&#34;&gt; 
            Nickelodeon
        &lt;/a&gt; 
        &lt;/p&gt; 
    &lt;/figcaption&gt;
    
    &lt;p&gt;&lt;a href=&#34;/img/blogger/chrome.jpeg&#34;&gt;
  &lt;img src=&#34;/img/blogger/chrome.jpeg&#34;  alt=&#34;Squidward dreams of a future where everything is literally chrome&#34; width=&#34;300em&#34;  /&gt;
  &lt;/a&gt;&lt;/p&gt;

&lt;/figure&gt;

&lt;div class=&#34;clearboth&#34;&gt;&lt;/div&gt;

&lt;h1 id=&#34;toc_0&#34;&gt;Usability is hard&lt;/h1&gt;

&lt;p&gt;I don&amp;rsquo;t know what the future will bring. What I do know is that people are generally not very good at picking the right tools. And I see no reason why that could not also apply in the future. Revisiting the above definition, there are two things that can go wrong: 1) a tool fails to do &amp;ldquo;what we want to do&amp;rdquo;, or 2) that &amp;ldquo;what we can[not] do&amp;rdquo; prevents us from using the tool properly (or use it at all).&lt;/p&gt;

&lt;p&gt;The first one seems obvious. I need to drive a nail into a wall, so I use a hammer, not a wrench. But it&amp;rsquo;s not always that obvious, and we often end up using tools for things they were never intended to do. That&amp;rsquo;s cool if you&amp;rsquo;re aware of the problem and know what you are doing - MacGyver! - but just as foolish otherwise.&lt;/p&gt;

&lt;p&gt;The other type of tool abuse is more subtle: failing to bridge the tool&amp;rsquo;s abilities with those of it&amp;rsquo;s user. Buzz word: &lt;em&gt;usability&lt;/em&gt;. Creating a tool that can do something is the easy part - making it so that people can, will, and repeatedly use it is much harder. Simply put: the most effective tool is not really a tool if nobody uses it.&lt;/p&gt;

&lt;h1 id=&#34;toc_1&#34;&gt;Examples I&amp;rsquo;d like to rant about&lt;/h1&gt;

&lt;p&gt;As a software engineer, I happen to see wrong-tool-syndrom a lot in - wait for it - software development. There are a few examples in particular that I have noticed recently and I would like to put them here for two reasons. To make my point (duh) and to rant.&lt;/p&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;Email chain discussions&lt;/h2&gt;

&lt;p&gt;The 80&amp;rsquo;s called, they want their mailing lists back! I totally and absolutely &lt;em&gt;despise&lt;/em&gt; mailing lists. Whenever I need to go to one for help with a tool, I do my best to ditch the tool. They used to have their purpose, nowadays they&amp;rsquo;re just obsolete usability nightmares.&lt;/p&gt;

&lt;p&gt;Email is simply the wrong tool for multi-user, text-based conversations. It gets worse with corporate email. It&amp;rsquo;s a nightmare to keep people on/off the receipient list; people get spammed. It&amp;rsquo;s insanely redundant - having to resend the entire past correspondence at the bottom of each message. And once someone hits &amp;ldquo;Reply&amp;rdquo; instead of &amp;ldquo;Reply All&amp;rdquo;, then the discussion gets fragmented and redundancy even increases.&lt;/p&gt;

&lt;p&gt;There are &lt;a href=&#34;http://xmpp.org/extensions/xep-0045.html&#34;&gt;much&lt;/a&gt; &lt;a href=&#34;http://trac-hacks.org/wiki/DiscussionPlugin&#34;&gt;better&lt;/a&gt; &lt;a href=&#34;http://www.coordino.com/&#34;&gt;tools&lt;/a&gt; available for online discussions. They were designed to allow for sane reading, backtracking, quoting and searching. And above all, they&amp;rsquo;re much less redundant than when using email.&lt;/p&gt;

&lt;figure &gt;
    
    &lt;figcaption&gt;
        &lt;p&gt;
        Mailing lists are sooo 80&amp;#39;s. And, unlike this here boombox, they *suck*.
        &lt;br/&gt;src:&lt;a href=&#34;http://www.wikipedia.org&#34;&gt; 
            Wikipedia
        &lt;/a&gt; 
        &lt;/p&gt; 
    &lt;/figcaption&gt;
    
    &lt;p&gt;&lt;a href=&#34;/img/blogger/boombox.jpeg&#34;&gt;
  &lt;img src=&#34;/img/blogger/boombox.jpeg&#34;  alt=&#34;A classic, cool cassette player from the eighties&#34; width=&#34;400em&#34;  /&gt;
  &lt;/a&gt;&lt;/p&gt;

&lt;/figure&gt;

&lt;div class=&#34;clearboth&#34;&gt;&lt;/div&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;Avoiding OOP features in OOP languages&lt;/h2&gt;

&lt;p&gt;Modern programming languages have some comfortable features, like just-in-time compilation, sandboxing or garbage collection. Take the .NET runtime. With C# as it&amp;rsquo;s &amp;ldquo;native&amp;rdquo; language, it supports polymorphism, i.e. virtual methods.&lt;/p&gt;

&lt;p&gt;I have seen people spend significant amounts of time &amp;ldquo;optimizing&amp;rdquo; their code to prevent the runtime from having to look for the right method to call in the inheritance chain. They end up with lots of &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/88c54tsw%28v=VS.100%29.aspx&#34;&gt;sealed&lt;/a&gt; classes which tell the compiler that no other classes may be derived from them. Consequently, the runtime will not need to check for overrides at execution time, thus making the code a few friggaseconds faster. Neat, huh?&lt;/p&gt;

&lt;p&gt;Not. My problem with this is not &lt;em&gt;that&lt;/em&gt; the classes are sealed (even though unit testing them can be a bitch). It is &lt;em&gt;why&lt;/em&gt; they are sealed. It&amp;rsquo;s not the result of some object-oriented design decision. It&amp;rsquo;s done with the sole purpose to prevent the CLR from doing something it was &lt;em&gt;designed&lt;/em&gt; to do. C# is object-oriented, so there are virtual methods - deal with it. If you are afraid of the cost, then C# is the wrong tool for your problem - maybe have a look at C/C++ instead.&lt;/p&gt;

&lt;h2 id=&#34;toc_4&#34;&gt;Static methods in OOP languages&lt;/h2&gt;

&lt;p&gt;Within the last 10 years, many programmers have migrated from C++ to C#. I can recognize their (early) code right away: static methods everywhere. That is not object oriented. It&amp;rsquo;s method oriented - &lt;em&gt;procedural&lt;/em&gt;. There are only very few cases that justify the use of static methods in OOP. You are either using C# for the wrong reasons or you don&amp;rsquo;t understand OOP. Either way, you will not be able to use the tool the way it was designed to be used.&lt;/p&gt;

&lt;h2 id=&#34;toc_5&#34;&gt;Videos in (tech) blogs&lt;/h2&gt;

&lt;p&gt;When I go to your blog, I want to read it - not watch a stupid video. Chances are my mobile browser does not know your codec, and if it does, it still looks like crap. And do you really expect me to turn down my music in order to listen to you say stuff you were too lazy to write down? There&amp;rsquo;s so many things that make videos bad for this: I can&amp;rsquo;t skim over the content like I usually do - instead I end up jumping around in the timeline, buffering, cursing. Fuck your &lt;a href=&#34;http://de.wikipedia.org/wiki/Vlog&#34;&gt;vlog&lt;/a&gt; or whatever you call it, do a podcast if that&amp;rsquo;s your thing. If you have a blog, I want to &lt;em&gt;read&lt;/em&gt; it. Period.&lt;/p&gt;

&lt;h2 id=&#34;toc_6&#34;&gt;Perforce for version control&lt;/h2&gt;

&lt;p&gt;&amp;ldquo;Perforce&amp;rdquo; and &amp;ldquo;control&amp;rdquo; is an contradiction. There you go. I just had to put this one in.&lt;/p&gt;

&lt;figure &gt;
    
    &lt;figcaption&gt;
        &lt;p&gt;
        Me when I see your vlog
        &lt;br/&gt;src:&lt;a href=&#34;http://www.thestupiditburns.com&#34;&gt; 
            thestupiditburns.com
        &lt;/a&gt; 
        &lt;/p&gt; 
    &lt;/figcaption&gt;
    
    &lt;p&gt;&lt;a href=&#34;/img/blogger/thestupiditburns.jpeg&#34;&gt;
  &lt;img src=&#34;/img/blogger/thestupiditburns.jpeg&#34;  alt=&#34;when something is so stupid that makes your head hurt&#34; width=&#34;450em&#34;  /&gt;
  &lt;/a&gt;&lt;/p&gt;

&lt;/figure&gt;

&lt;div class=&#34;clearboth&#34;&gt;&lt;/div&gt;

&lt;h1 id=&#34;toc_7&#34;&gt;The thin line between a pragmatist and a moron&lt;/h1&gt;

&lt;p&gt;Now, you cannot always switch tools. Switching language on a gazillion LOC project is not going to happen overnight. Then, at least try to use the tools you have the way the were designed to be used. Make the most of what you have, and don&amp;rsquo;t try to bastardize it just because you are too lazy to use it the right way.&lt;/p&gt;

&lt;p&gt;What I really hate is that engineers that abuse a tool beyond recognition are often admired. Yes, it&amp;rsquo;s great to be able to improvise when required - but it&amp;rsquo;s far more important to be able to &lt;a href=&#34;http://www.engineyard.com/blog/2011/the-number-one-trait-of-a-great-developer/&#34;&gt;decide&lt;/a&gt; what the right tool for the job/situation/user is. A construction worker that uses a screwdriver to punch holes into walls instead of using a drill will not be considered creative, but a moron. Why do the opposite in software?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Scotty Effect</title>
      <link>http://raph.es/blog/2011/10/The-Scotty-Effect/</link>
      <pubDate>Thu, 27 Oct 2011 10:33:00 IST</pubDate>
      
      <guid>http://raph.es/blog/2011/10/The-Scotty-Effect/</guid>
      <description>

&lt;p&gt;There&amp;rsquo;s a common problem among software engineers. Whenever someone asks us for an estimation on how long task X is going to take, it happens. &amp;ldquo;Ah, not a big deal, half a day, max.&amp;rdquo; Is what we initially want to say. It happens to most people I know, and it happens to me.&lt;/p&gt;

&lt;p&gt;It seems like there&amp;rsquo;s a little geek inside us that wants to impress our customers by making it look like we&amp;rsquo;re wizards. Somebody is asking you to do something, and obviously it&amp;rsquo;s a problem complex enough that an engineer has to do it, now.&lt;/p&gt;

&lt;p&gt;And it&amp;rsquo;s all because of &lt;a href=&#34;http://www.startrek.com/database_article/scott&#34;&gt;Montgomery Scott&lt;/a&gt;, aka &amp;ldquo;Scotty&amp;rdquo; from the Original Star Trek ensemble. Whenever Kirk asks Scotty to fix something, it goes somewhere along these lines:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Kirk&lt;/strong&gt;: &amp;ldquo;Scotty, can you get the warp drive online in 2 hours?&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scotty&lt;/strong&gt;: &amp;ldquo;Lol captain, that&amp;rsquo;s impossible. Do you have any idea how complex and fragile a matter/anti-matter propulsion engine is?? We&amp;rsquo;ll have to&amp;hellip;&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kirk&lt;/strong&gt;: &amp;ldquo;Scotty, it&amp;rsquo;s crucial that we prevent the universe from imploding so I can get into this alien chick&amp;rsquo;s pants.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scotty&lt;/strong&gt;: &amp;ldquo;Meh, I&amp;rsquo;ll see what I can do&amp;hellip;&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;No surprises so far - just a normal day in the life of an engineer having to deal with unrealistic expectations, right? Wrong! In the end, Scotty pulls it off! He not only fixes it, but apparently the warp engine hasn&amp;rsquo;t went supernova in the next episode, either. So he probably did a good job, too!&lt;/p&gt;

&lt;p&gt;We grew up with this idea, that if you really want your boss to get into that alien chick&amp;rsquo;s pants, you need to be a wizard. You get the point. That&amp;rsquo;s why I believe it&amp;rsquo;s Scotty&amp;rsquo;s fault. Don&amp;rsquo;t get me wrong, Scotty rocks (rest in peace, Mr. Doohan). But that inner geek inside us, it&amp;rsquo;s probably a little Scotty.&lt;/p&gt;

&lt;figure &gt;
    
    &lt;figcaption&gt;
        &lt;p&gt;
        I couldn&amp;#39;t find DuctTape or WD40 on GitHub
        
            
        
        &lt;/p&gt; 
    &lt;/figcaption&gt;
    
    &lt;p&gt;&lt;a href=&#34;/img/blogger/repairs.jpeg&#34;&gt;
  &lt;img src=&#34;/img/blogger/repairs.jpeg&#34;  alt=&#34;duct tape and wd40 can fix anything&#34; width=&#34;400em&#34;  /&gt;
  &lt;/a&gt;&lt;/p&gt;

&lt;/figure&gt;

&lt;div class=&#34;clearboth&#34;&gt;&lt;/div&gt;

&lt;h1 id=&#34;toc_0&#34;&gt;Back to reality&lt;/h1&gt;

&lt;p&gt;Spoiler alert! Star Trek is just a TV show. In the real world, it&amp;rsquo;s not going to happen. And this is why.&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;It&amp;rsquo;s not the same thing&lt;/h2&gt;

&lt;p&gt;If you do a 10 day job in just 1 day, then you&amp;rsquo;re not doing the 10 day job. Claiming otherwise is lying to yourself and your customer. You&amp;rsquo;re really doing the ugly 1 day version, involving lots of duct tape and WD-40. We like to call ourselves &amp;ldquo;hackers&amp;rdquo; - just like the good, old-school hacker. But people forget that a &amp;ldquo;hack&amp;rdquo; back in the good old days was nothing bad or malicious. It was something neat, elegant. It was &amp;ldquo;the right thing to do&amp;rdquo;. Read Steven Levy&amp;rsquo;s &lt;a href=&#34;http://books.google.com/books?id=mShXzzKtpmEC&amp;amp;lpg=PA67&amp;amp;vq=right%20thing%20to%20do&amp;amp;pg=PA58#v=onepage&amp;amp;q&amp;amp;f=false&#34;&gt;Hackers&lt;/a&gt;. If you&amp;rsquo;re hotshot enough to pull off the 10 day job in 1 day, fair enough. It&amp;rsquo;s most likely though, even though you might be awesome, that you are &lt;a href=&#34;http://www.livingwithsourcecode.com/2011/03/ill-just.html&#34;&gt;just&lt;/a&gt; taking shortcuts.&lt;/p&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;Sooner or later, it will come back to bite you&lt;/h2&gt;

&lt;p&gt;This can work in emergency scenarios, and over short periods of time. But by doing so, you&amp;rsquo;ll build up more and more &lt;a href=&#34;http://en.wikipedia.org/wiki/Technical_debt&#34;&gt;technical debt&lt;/a&gt;. We all know what happens if you run a never-ending tab without bothering to repay your debt. One day, your warp engine will not work in the next episode. You might eventually have to eject it.&lt;/p&gt;

&lt;p&gt;Also, be aware that making it look like you can make the impossible happen will raise your customers&amp;rsquo; expectations - putting you under pressure to uphold the illusion.&lt;/p&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;Life&amp;rsquo;s not a TV show&lt;/h2&gt;

&lt;p&gt;Scotty is usually pessimistic at first, but then finds some magical way to do it within the impossible time frame. In reality, things are the other way around. They seem simple, but when you take a closer look, they turn out to be more complicated. Knowing this makes the difference between guessing and estimating.&lt;/p&gt;

&lt;h1 id=&#34;toc_4&#34;&gt;What to do about it&lt;/h1&gt;

&lt;p&gt;You&amp;rsquo;re better off to resist that initial urge to fix the warp drive/deflector shield/&lt;insert bug here&gt; in &amp;ldquo;2 days&amp;rdquo; (or whatever ambitious answer your gut gives you). Take one of the many great pieces of advice from &lt;a href=&#34;http://books.google.com/books?id=5wBQEp6ruIAC&amp;amp;lpg=PP1&amp;amp;dq=the%20pragmatic%20programmer&amp;amp;pg=PT87#v=onepage&amp;amp;q&amp;amp;f=false&#34;&gt;The Pragmatic Programmer&lt;/a&gt;, and just say &amp;ldquo;I&amp;rsquo;ll get back to you&amp;rdquo;. Do some realistic estimating (not guessing!), and then tell them how long it will take.&lt;/p&gt;

&lt;p&gt;And guess what, you&amp;rsquo;ll get better with your estimations. You&amp;rsquo;ll end up doing things the right way, and within realistic time.&lt;/p&gt;

&lt;p&gt;And every once in a while, they&amp;rsquo;ll still think what you do is magic.&lt;/p&gt;

&lt;h1 id=&#34;toc_5&#34;&gt;UPDATE:&lt;/h1&gt;

&lt;p&gt;My fellow trekkers have not dissapointed and spotted what can appear to be a contradiction to my descriptions of Scotty (which are based on the &amp;ldquo;old&amp;rdquo; series): in the great espisode 130 of &amp;ldquo;Star Trek: The Next Generation&amp;rdquo;, &lt;a href=&#34;http://en.wikipedia.org/wiki/Relics_%28Star_Trek:_The_Next_Generation%29&#34;&gt;&amp;ldquo;Relics&amp;rdquo;&lt;/a&gt;, Scotty returns to the latest USS Enterprise D. He then hints at his successor, Chief Engineer Geordi LaForge, that Geordi should always exaggerate his estimations to make himself look like a miracle worker (&lt;a href=&#34;http://www.imdb.com/title/tt0708764/quotes?qt=qt0349432&#34;&gt;quote&lt;/a&gt;). Since I&amp;rsquo;m claiming that Scotty always managed to do miracles in an impossible time frame, it looks like Scotty did not only deceive Kirk, but me as well. Or did he? While thinking about a response to this, I find that I am torn. I have two separate responses, each from a different perspective. Yet none of them affect the point of this post.&lt;/p&gt;

&lt;h2 id=&#34;toc_6&#34;&gt;I, Hacker&lt;/h2&gt;

&lt;p&gt;Senior engineers often tweak their previous achievements to look good in front of the n00bs by giving advice that they not necessarily have never adhered to themselves. But who&amp;rsquo;s going to prove the opposite? In this episode, being in the 24th century with all the shiny strange technology, Scott feels outdated and useless. This could just be a senior engineer trying to say something smart to impress his younger, more advanced successor.&lt;/p&gt;

&lt;h2 id=&#34;toc_7&#34;&gt;I, Trekker&lt;/h2&gt;

&lt;p&gt;This espisode was produced 23 years after The Original Series, approx. 1 year after Gene Rodenberry&amp;rsquo;s passing. Star Trek is full of inconsistencies. It&amp;rsquo;s hard to keep continuity perfect over so many episodes and movies, and it&amp;rsquo;s Sci-Fi after all. I seriously believe this was something the authors wanted Scotty to say in order to be funny, nothing more and nothing less. It is funny because it&amp;rsquo;s a direct contradiction to what we all know from previous events. This was a great espisode, and this scene in particular was a memorable one - but I refuse to acknowledge this as evidence that Scotty wasn&amp;rsquo;t simply an extraordinary engineer - a wizard.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;This post received some attention over at Hacker News - check out the &lt;a href=&#34;http://news.ycombinator.com/item?id=3162415&#34;&gt;discussions&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Book review: Founders at Work</title>
      <link>http://raph.es/blog/2011/08/Book-review-Founders-at-Work/</link>
      <pubDate>Wed, 24 Aug 2011 11:37:00 IST</pubDate>
      
      <guid>http://raph.es/blog/2011/08/Book-review-Founders-at-Work/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;/img/blogger/founders_cover.jpeg&#34;&gt;
  &lt;img src=&#34;/img/blogger/founders_cover.jpeg&#34;  alt=&#34;Founders At Work by Jessica Livingston&#34; width=&#34;150em&#34;  /&gt;
  &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A few weeks ago, I finished reading the book &lt;a href=&#34;http://www.foundersatwork.com/&#34;&gt;Founders at Work&lt;/a&gt; by Jessica Livingston. It&amp;rsquo;s a collection of interviews with founders and early employees of various (successful!) technology companies. Many of them are web start-ups founded in the era of the &lt;a href=&#34;http://en.wikipedia.org/wiki/Dot-com_bubble&#34;&gt;dot-com bubble&lt;/a&gt;. They talk about how they got started, highs and lows, good and bad experiences with venture capitalists and lots of funny things that happened along the way.&lt;/p&gt;

&lt;p&gt;I have to admit it was the big names on the cover that caught my attention initially. It then surprised me that those were actually the worst parts of the book. While the big players&amp;rsquo; stories do have some interesting bits and pieces, they come across too polished. Kind of how you might expect successful entrepeneurs to sound when they brag about their success. So, to my own surpsise, I found myself rushing through the stories about Yahoo, Firefox, Lycos, Lotus, Hotmail, PayPal, Craigslist and Gmail, eager for them to finish. Exceptions: Flickr, RIM, TiVo and Apple.&lt;/p&gt;

&lt;p&gt;The interviews with the less known founders, on the other hand, feel more authentic and personal. When I say &amp;ldquo;less known&amp;rdquo;, I mean I had no idea who they were before reading this book. Although in fact I was familiar with some of their products (e.g. &lt;a href=&#34;http://www.sixapart.com/&#34;&gt;Six Apart&lt;/a&gt;&amp;rsquo;s &lt;a href=&#34;http://www.typepad.com/&#34;&gt;TypePad&lt;/a&gt;). The way they tell their stories, particularly how they reflect on the personal side, makes these so much more interesting. They are the ones that kept me from putting the book down, and they totally make up for some of the more tiring chapters. Great interviews that come to my mind (in no particular order) would be those with ArsDigita, Blogger, Hot or Not, Six Apart, Viaweb and Shareholder.com.&lt;/p&gt;

&lt;p&gt;Some of my favorites also happen to be with people who are somehow affiliated with the author and her own company &lt;a href=&#34;http://ycombinator.com/&#34;&gt;Y Combinator&lt;/a&gt;, sort of a micro-investor that aims to support other startups. My guess is that they were able to focus their stories to be closer to the core message of the book, which is very much in line with the &lt;a href=&#34;http://ycombinator.com/about.html&#34;&gt;mission of Y Combinator&lt;/a&gt;. Another possibility is that the &amp;ldquo;older&amp;rdquo; generation of industry veterans simply does not like to share very personal information as much as the younger blogging generation does. But I&amp;rsquo;m just speculating here.&lt;/p&gt;

&lt;p&gt;Interestingly, Gmail is the closest the book gets to Google. Somehow I instinctively associate the &lt;del&gt;ad&lt;/del&gt; &lt;del&gt;search&lt;/del&gt; &lt;del&gt;meh&lt;/del&gt; giant with the term &amp;ldquo;startup&amp;rdquo; (kudos to their &lt;a href=&#34;http://en.wikipedia.org/wiki/Corporate_Identity&#34;&gt;CI&lt;/a&gt; team, I guess) so I expected them to be featured. Maybe their story is just too popular? But on the other hand, Apple is in it, and their history must be one of the best-known out there considering the legions of fan-boys that are in love with Steve Jobs. That and it&amp;rsquo;s coverage in other &lt;a href=&#34;http://books.google.com/books?id=mShXzzKtpmEC&#34;&gt;books&lt;/a&gt;. Nevertheless, Steve Wozniak (the &lt;em&gt;other&lt;/em&gt; Steve) gives what I felt was the longest and most self-praising interview in the entire book.&lt;/p&gt;

&lt;figure &gt;
    
    &lt;figcaption&gt;
        &lt;p&gt;
        Excited about the newest iThing?
        
            
        
        &lt;/p&gt; 
    &lt;/figcaption&gt;
    
    &lt;p&gt;&lt;a href=&#34;/img/blogger/fanboi.jpeg&#34;&gt;
  &lt;img src=&#34;/img/blogger/fanboi.jpeg&#34;   width=&#34;350em&#34;  /&gt;
  &lt;/a&gt;&lt;/p&gt;

&lt;/figure&gt;

&lt;div class=&#34;clearboth&#34;&gt;&lt;/div&gt;

&lt;h1 id=&#34;toc_0&#34;&gt;Some nice quotes&lt;/h1&gt;

&lt;p&gt;This is of course just my opinion, and I am sure that you&amp;rsquo;d pull out other things from this book. Either way, it is a pure goldmine for good quotes. I will present and comment on some of my personal favorites below (again, in no particular order). There&amp;rsquo;s so many more I&amp;rsquo;d love to put up here, but this is already more than I can probably expect anyone out there to read. It should be quite obvious at this point that I enjoyed reading this book, most parts of it anyway. It&amp;rsquo;s full of good advice for those of you who are planning on starting a company (albeit somewhat Silicon Valley specific) and for anyone else who is just interested in getting some fresh perspectives on the past and present world of IT start-ups.&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;Joshua Schachter, &lt;a href=&#34;http://www.delicious.com/&#34;&gt;del.icio.us&lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;My coworkers at Morgan [Stanley] were smart people. One of the people we worked with won the Nobel Prize for economics while I was there. It was a fast, smart environment. I remember when I interviewed at Google the first time around and &lt;strong&gt;they were making derogatory comments about where I worked:&lt;/strong&gt; &amp;ldquo;Well, here you&amp;rsquo;ll get to work with PhDs and computer scientists.&amp;rdquo; And I&amp;rsquo;m like, &amp;ldquo;I already do.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I like this because it is so true. Financial trading has a very high concentration of extremely smart people and yet apparently many people don&amp;rsquo;t believe that. It&amp;rsquo;s an industry with very interesting technical challenges and (obviously) tons of resources, making it an attractive career choice. Some of the brightest people I have ever met work in the financial software industry.&lt;/p&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;Philip Greenspun, &lt;a href=&#34;http://en.wikipedia.org/wiki/ArsDigita&#34;&gt;ArsDigita&lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;(&amp;hellip;) programmers are very unlikeable people. They&amp;rsquo;re not pleasant to manage. In aviation, for example, people who greatly overestimate their level of skill are all dead. You don&amp;rsquo;t see them as employess. J.F.K., Jr., is not working at a Part 135 charter operation because he&amp;rsquo;s dead. &lt;strong&gt;It&amp;rsquo;s not that he was a bad pilot; it&amp;rsquo;s just that his level of confidence to level of skill ratio was out of whack&lt;/strong&gt;, and he made a bunch of bad decisions that led to him dying, which is unfortunate. In aviation, by the time someone might be your employee, probably their perceived skill and their actual skill are reasonably in line. In IT, you have people who think, &amp;ldquo;I&amp;rsquo;m a really great driver, I&amp;rsquo;m a great lover, I&amp;rsquo;m a great programmer.&amp;rdquo; But where are the metrics that are going to prove them wrong? Traffic accidents are very infrequent, so they don&amp;rsquo;t get the feedback that they are a terrible driver because it&amp;rsquo;s so unlikely that the&amp;rsquo;ll get into an accident. A girlfriend leaves them - well, it was certainly her deep-seated psychological problems from childhood. Their code fails to ship to customers. It was marketing&amp;rsquo;s fault!&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is probably my favorite part of the book. It points out something that I believe is a serious problem in most software development teams. Many engineers massively overestimate their own capabilities, especially so-called &amp;ldquo;senior&amp;rdquo; people. They are convinced that what they do is perfect and won&amp;rsquo;t consider that they might be able to improve their skills. &amp;ldquo;I don&amp;rsquo;t need unit tests because I write working code&amp;rdquo;. Sure&amp;hellip; That makes evolving a team unnecessarily difficult (albeit, thank goodness, not impossible!).&lt;/p&gt;

&lt;figure &gt;
    
    &lt;figcaption&gt;
        &lt;p&gt;
        In aviation, Darwin takes care of Mavericks.
        
            img: Wikipedia
        
        &lt;/p&gt; 
    &lt;/figcaption&gt;
    
    &lt;p&gt;&lt;a href=&#34;/img/blogger/maverick.jpeg&#34;&gt;
  &lt;img src=&#34;/img/blogger/maverick.jpeg&#34;   width=&#34;500em&#34;  /&gt;
  &lt;/a&gt;&lt;/p&gt;

&lt;/figure&gt;

&lt;div class=&#34;clearboth&#34;&gt;&lt;/div&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;Paul Graham, Viaweb&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;I think the main thing [why users liked Viaweb] is that it was easy. &lt;strong&gt;Practically all the software in the world is either broken or very difficult to use.&lt;/strong&gt; So users dread software. They&amp;rsquo;ve been trained that whenever they try to install something, or even fill out a form online, it&amp;rsquo;s not going to work. I dread installing stuff, and I have a PhD in computer science.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Not much to add here. It reminds me of Apple&amp;rsquo;s highly user-centric design philosophy - and how successful it is, particularly with less tech-savvy customers. As obvious as it may seem, it takes dedication and discipline to go through with it.&lt;/p&gt;

&lt;h2 id=&#34;toc_4&#34;&gt;Mena Trott, &lt;a href=&#34;http://www.sixapart.com/&#34;&gt;Six Apart&lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;If I&amp;rsquo;m forced to think about women who are in this field, I can&amp;rsquo;t usually. But I know there are. Many women are in marketing or design. I think marketing and design are a lot harder to learn than engineering. That&amp;rsquo;s my opinion. People put value judgements on engineering like, &amp;ldquo;There are more men; therefore, it must be a smarter field that women should get into.&amp;rdquo; (&amp;hellip;) &lt;strong&gt;There aren&amp;rsquo;t that many women in technology and maybe it doesn&amp;rsquo;t really matter.&lt;/strong&gt; I mean, why aren&amp;rsquo;t there more men in design?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I believe Ms. Trott makes a good point here. So the number of women in IT is not as high as some arbitrary percentage people decided would be &amp;ldquo;fair&amp;rdquo; - who cares? Maybe it&amp;rsquo;s just something most women don&amp;rsquo;t like to do, and that&amp;rsquo;s that? Back when I was at the University my programme was a mix of computer science and design. The male/female ratio was fairly balanced. Until we had to decide what to specialize on: CS or the design thing. Nearly all the women went for design, leaving mostly guys in the CS classes. It was a natural decision, those ladies simply wanted to do design. While preconceptions based on stereotypes can be harmful and encouraging them is not good, we should not try to force them out of existence, either. For example, most boys like trucks while girls usually prefer dolls. Not wanting girls to play with trucks would be just as harmful as not wanting them to play with dolls, just for the sake of eradicating a stereotype. To get back to the point: maybe most women simply prefer design over software development. Don&amp;rsquo;t try to draw more women into the field just in order to make a point. Having said that, I do think that more female software developers could really benefit the industry.&lt;/p&gt;

&lt;figure &gt;
    
    &lt;figcaption&gt;
        &lt;p&gt;
        Flags mark the many quotes I enjoyed.
        
            
        
        &lt;/p&gt; 
    &lt;/figcaption&gt;
    
    &lt;p&gt;&lt;a href=&#34;/img/blogger/founders_bookmarks.jpeg&#34;&gt;
  &lt;img src=&#34;/img/blogger/founders_bookmarks.jpeg&#34;   width=&#34;400em&#34;  /&gt;
  &lt;/a&gt;&lt;/p&gt;

&lt;/figure&gt;

&lt;div class=&#34;clearboth&#34;&gt;&lt;/div&gt;

&lt;h2 id=&#34;toc_5&#34;&gt;Sabeer Bhatia, &lt;a href=&#34;http://de.wikipedia.org/wiki/Hotmail&#34;&gt;Hotmail&lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;(&amp;hellip;) when you are hardware designers, you have tremendously more discipline in writing and describing software because in hardware you cannot get it wrong. Every turn of every chip costs you millions of dollars, so when hardware designers design any piece of software, they normally get it right. They use something called state machines to describe the functioning of the software. (&amp;hellip;) So you write it in a very deterministic fashion and therefore you tend not to make too many mistakes. Whereas the pure software writers - the way they think and architect software is very creative. (&amp;hellip;) So in terms of being able to test it out, there is somewhat of a difference, but I just think that &lt;strong&gt;hardware designers would be pretty good software designers&lt;/strong&gt; as well.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;He interchangeably uses the terms &amp;ldquo;software writers&amp;rdquo;, &amp;ldquo;architect&amp;rdquo; and software designers&amp;rdquo; here, so I might be misunderstanding him a bit. But to me it reads like he is saying that hardware hackers could easily be good software developers if they only wanted to, whereas the other way around it would not work. I have to disagree. One thing that distinguishes software from most other domains is that a software project is subject to constant change. That&amp;rsquo;s why comparing it with construction, or in this case, hardware, just does not work well. Hardware hackers might make good &lt;em&gt;programmers&lt;/em&gt;. But there is a big difference between &lt;em&gt;programming&lt;/em&gt; and &lt;em&gt;software development&lt;/em&gt;. Programming is a skill you need in order to develop software, but there is much more to it. Because it&amp;rsquo;s about &lt;em&gt;developing&lt;/em&gt; software: that means not just getting it right at one point in time, but evolving it over a period of time. A whole set of other skills are required for that than just knowing how to draw a state machine.&lt;/p&gt;

&lt;h2 id=&#34;toc_6&#34;&gt;Arthur van Hoff, &lt;a href=&#34;http://investing.businessweek.com/research/stocks/private/snapshot.asp?privcapId=31114&#34;&gt;Marimba&lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;So we got a really good first round of funding - $4 million from Kleiner Perkins. Though I thought they wired the money in these situations, they actually gave us a check. So we had two checks (&amp;hellip;) and Sami goes, &amp;ldquo;Let&amp;rsquo;s go to Kinko&amp;rsquo;s and make copies!&amp;rdquo; So he takes the checks to Kinko&amp;rsquo;s and comes back with the photocopies, and &lt;strong&gt;he forgot to take the checks out of the copy machine!&lt;/strong&gt; Luckily they were still there.
All the early people that had been there 3 to 4 years were starting to leave. Morale was very low, and so I went to the CFO and said, &amp;ldquo;Look, I want to buy an espresso machine.&amp;rdquo; And he said, &amp;ldquo;No, we can&amp;rsquo;t do that, it&amp;rsquo;s too expensive.&amp;rdquo; A few weeks later, when another senior engineer quit, I said, &amp;ldquo;Screw it, let&amp;rsquo;s go buy an espresso machine.&amp;rdquo; So Jonathan and I went online and bought this super-duper Italian, fully automatic, $15,000 espresso machine on his credit card and submitted the expense form. The CFO almost had a baby. It was unbelievable. (&amp;hellip;) &lt;strong&gt;and it was the best money we ever spent&lt;/strong&gt;. Every morning, people would meet and crowd around it. This thing was just it, the bee&amp;rsquo;s knees, people loved it, they couldn&amp;rsquo;t stop talking about it. A month later, the CFO came and said, &amp;ldquo;I&amp;rsquo;m sorry, we should have done this years ago.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;He continues to explain that you should be willing to invest into creating a working environment that people enjoy working in. Losing them to competition is much more expensive in the long run. And it&amp;rsquo;s the long-term things that some people tend to lose out of sight.&lt;/p&gt;

&lt;figure &gt;
    
    &lt;p&gt;&lt;a href=&#34;/img/blogger/all-like-ms.jpeg&#34;&gt;
  &lt;img src=&#34;/img/blogger/all-like-ms.jpeg&#34;   width=&#34;300em&#34;  /&gt;
  &lt;/a&gt;&lt;/p&gt;

&lt;/figure&gt;

&lt;div class=&#34;clearboth&#34;&gt;&lt;/div&gt;

&lt;h2 id=&#34;toc_7&#34;&gt;Joel Spolsky, &lt;a href=&#34;http://www.fogcreek.com/&#34;&gt;Fog Creek Software&lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;If you were an alien and you came here in 1991 and you wanted to learn how to develop software, you would learn ten times as much at Microsoft as anywhere else, I think (&amp;hellip;) Now Microsoft has forgotten all these things, and they&amp;rsquo;ve hired a lot of morons that don&amp;rsquo;t know these things anymore. I think that now Microsoft is kind of a big tar pit where you can barely move forward because there&amp;rsquo;s so much bueaucracy. But I learned a lot.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It&amp;rsquo;s interesting to see how innovation remains largely concentrated within start-ups, no matter how hard bigger, more established companies try to preserve that culture. Google, your typical hip start-up from yesteryear, now appears to be at the point where Microsoft was in the early nineties. The circle of life, I suppose.&lt;/p&gt;

&lt;h2 id=&#34;toc_8&#34;&gt;James Hong, &lt;a href=&#34;http://hotornot.com/&#34;&gt;Hot or Not&lt;/a&gt;&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;So the article came out and the server got slammed. (&amp;hellip;) we took the site down, grabbed an extra PC (&amp;hellip;) and drove to Berkeley where Jim had a shared office. I remember taking the top off a case for pushpins and mounting it on top of the power switch of the machine so no one could turn it off. Then we put it in the corner under his desk and surrounded it with books, so &lt;strong&gt;it just looked like a bunch of stuff under his desk with a little Ethernet cable coming out.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I guess I like this one because it reminds me of how some friends of mine ran their web design company&amp;rsquo;s project server from inside the University for over a year. That counts as education, right?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I originally had my parents moderating since they were retired, and after a few days I asked my dad how it was going. He said, &amp;ldquo;Oh, it&amp;rsquo;s really interesting. Mom saw a picture of a guy and a girl and another girl and they were doing&amp;hellip;&amp;rdquo; So I told Jim, &lt;strong&gt;&amp;ldquo;Dude, my parents can&amp;rsquo;t do this any more. They&amp;rsquo;re looking at porn all day.&amp;rdquo;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Funny for all the wrong reasons.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Test of Mass Destruction</title>
      <link>http://raph.es/blog/2011/07/The-Test-of-Mass-Destruction/</link>
      <pubDate>Fri, 15 Jul 2011 13:18:00 IST</pubDate>
      
      <guid>http://raph.es/blog/2011/07/The-Test-of-Mass-Destruction/</guid>
      <description>

&lt;p&gt;The below is the log of a chat I had a while back with a colleague (you know who you are). I had just set up a fresh TeamCity build for his new project. This was a bit exciting for me since I am constantly encouraging developers to write tests for their code, &lt;em&gt;new code&lt;/em&gt; in particular. After I had kicked off a first build, a very&amp;hellip;&amp;ldquo;special&amp;rdquo; test appeared to be &amp;ldquo;hanging&amp;rdquo;&amp;hellip;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[me], 10:02:36:
looks like some tests are taking ages to finish

[me], 10:02:48:
i might have to annoy you about that

[you know who you are], 10:04:55:
there are very few tests in there and they run instantly on mine...

[me], 10:05:26:
that&#39;s why we also run them on other machines :-)
i&#39;ll wait till they&#39;re through then we can find out whats going on

[you know who you are], 10:06:19:
ah i can see whats wrong now

[me], 10:06:45:
missing dependency or something?

[you know who you are], 10:11:09:
an old broken test, deleted from visual studio but not removed from perforce

[you know who you are], 10:12:36:
you can kill it if you want

[me], 10:16:32:
i would - but viewing the logs of that build killed my machine :-D

[me], 10:16:40:
i shit you not

[you know who you are], 10:16:52:
it killed my chrome too

[me], 10:17:05:
that&#39;s one cool test

[you know who you are], 10:17:22:
it was a test i was running on my machine to get some idea of msmq inserts over time

[you know who you are], 10:17:40:
its trying to do 10 million msmq inserts to see how fast it runs

[me], 10:17:47:
OMFG

[me], 10:17:50:
are you nuts :-D

[you know who you are], 10:17:51:
so its probably going to generate 10 million exceptions

[you know who you are], 10:17:54:
lol

[me], 10:17:59:
that&#39;s going to take down the build server

[me], 10:18:03:
stop that build asap pls

[you know who you are], 10:18:12:
you started it, how do i stop it?
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yes, viewing the logs for that build did in fact crash one of my dev machines. Or it rather destroyed Firefox, which in turn killed my machine. A true &lt;em&gt;Test of Mass Destruction&amp;trade;&lt;/em&gt;. We eventually got the test to stop and removed it. But what do we learn from this?&lt;/p&gt;

&lt;h1 id=&#34;toc_0&#34;&gt;Know what you&amp;rsquo;re doing&lt;/h1&gt;

&lt;p&gt;First of all, always know what you are submitting to source control. Always, as in 100%. Diff all files if necessary and understand what&amp;rsquo;s in them - I know from personal experience that many developers do not understand most of what is inside &lt;a href=&#34;http://www.galaktor.net/2011/04/targeting-platforms-in-visual-studio.html&#34;&gt;Visual Studio project and solution files&lt;/a&gt;, for example. Understand it - you are changing it, and you are an engineer, so learn it if you don&amp;rsquo;t know what it is. Many developers think having a build server means not having to run stuff on your local machine anymore. That is wrong. The build server is a last line of defense in that matter, but if you break shared code you are hurting the productivity of other developers. If you make sure it &lt;a href=&#34;http://www.codinghorror.com/blog/2007/03/the-works-on-my-machine-certification-program.html&#34;&gt;works on your machine&lt;/a&gt; first, then nobody will notice that you screwed up and you are able to fix the problem before you switched to something else. If a build engineer has to call you up an hour later, you will probably need some time to retrace your steps to understand what&amp;rsquo;s wrong. Do it early, save yourself and others the pain.&lt;/p&gt;

&lt;figure &gt;
    
    &lt;p&gt;&lt;a href=&#34;/img/blogger/womm-label.png&#34;&gt;
  &lt;img src=&#34;/img/blogger/womm-label.png&#34;  alt=&#34;that&amp;#39;s why we also run them on *other* machines -me&#34; width=&#34;250em&#34;  /&gt;
  &lt;/a&gt;&lt;/p&gt;

&lt;/figure&gt;

&lt;div class=&#34;clearboth&#34;&gt;&lt;/div&gt;

&lt;h1 id=&#34;toc_1&#34;&gt;Know how to do it properly&lt;/h1&gt;

&lt;p&gt;Second, master your tools. In this particular case it was a problem most of us have because we are &lt;em&gt;forced&lt;/em&gt; to use per&lt;em&gt;force&lt;/em&gt; (bad pun fully &lt;a href=&#34;http://lmgtfy.com/?q=i+hate+perforce&#34;&gt;intended&lt;/a&gt;). Perforce might have a few good features on the server and support side, but the client tools for Windows developers are way below standard. Because Perforce clients do not actively monitor your changes on the client side, the server relies on the client to tell it about any add/edit/delete/whatever explicitly. This means if you delete a file from your working directory, it does not automatically mean the client will detect that and submit a &amp;ldquo;delete&amp;rdquo; to the server. Instead, it stays there. Just like this test. &lt;em&gt;But&lt;/em&gt;: Just having crappy tools is not an excuse for breaking stuff. There are &lt;a href=&#34;http://www.jetbrains.com/teamcity/features/delayed_commit.html&#34;&gt;ways&lt;/a&gt; to contain the damage you can cause. So either stop using the tool or learn how to deal with it.&lt;/p&gt;

&lt;h1 id=&#34;toc_2&#34;&gt;Do it as simple as possible&lt;/h1&gt;

&lt;p&gt;Finally, this test was designed to be dangerous. Why did it have to do something 10 &lt;em&gt;million&lt;/em&gt; times? Why not 100,000? Or 100? This was supposed to measure performance, so quite a large batch of iterations is a valid thing to do. But more often than not I find developers doing this when it is not necessary. &amp;ldquo;Just to be safe&amp;rdquo; or &amp;ldquo;thorough&amp;rdquo; or &amp;ldquo;because we can&amp;rdquo; (it&amp;rsquo;s automated, isn&amp;rsquo;t it?). Most of the time tests are fine with just one (=1) single test case. That&amp;rsquo;s why in &lt;a href=&#34;http://en.wikipedia.org/wiki/Test-driven_development&#34;&gt;TDD&lt;/a&gt; a test needs to break first, otherwise it&amp;rsquo;s not worth executing it, yet alone implementing the new feature. If you are just tacking on several variants of the same test, testing the same logic/feature over and over, you are wasting screen space, your time and everyone else&amp;rsquo;s time when they have to run and, most of all, &lt;em&gt;maintain&lt;/em&gt; your tests.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>RTFM</title>
      <link>http://raph.es/blog/2011/03/RTFM/</link>
      <pubDate>Thu, 17 Mar 2011 22:20:20 &#43;0100</pubDate>
      
      <guid>http://raph.es/blog/2011/03/RTFM/</guid>
      <description>

&lt;p&gt;I am constantly surprised at how many professional engineers seem reluctant to read a book. By book I mean any form of literature that has several hundred pages and goes into depth on any topic that is related to their profession. Often I would recommend reading a book on a topic, and all of a sudden people lose interest in it. It is scary, but book shelves at software companies are very often just decoration. Having books makes people feel smarter.&lt;/p&gt;

&lt;p&gt;It seems the maximum of effort many people are willing to put into self-education is skimming over a handful of blogs or posts on StackOverflow-ish sites. I do this very frequently myself, as I believe it is a good way to get some quick answers to common problems. I would even go so far and say: every software developer should know how to utilize the community knowledge we find on the internet to solve problems.&lt;/p&gt;

&lt;p&gt;Unfortunately, this kind of research has some very serious limitations. Finding quick answers and short tutorials on the web will almost never be as useful as reading a good book on that topic. I bet this might sound backward to some of you. After all, how can something as old-school as a book be superior over reading &lt;em&gt;&amp;lt;insert fancy blog/wiki/q&amp;amp;a site&amp;gt;&lt;/em&gt;?&lt;/p&gt;

&lt;h1 id=&#34;toc_0&#34;&gt;book &amp;gt; blog&lt;/h1&gt;

&lt;p&gt;Most of the time we do not spend more than a few minutes skimming over blogs/wikis in whatever is on the first page on Google. Come on, be honest with yourself. We have a more detailed look at one or two of them, but in the end we rarely spend more than 30 minutes to an hour reading that stuff. Usually we are looking for a quick answer to some problem, like &amp;ldquo;what is the exacty syntax for XYZ&amp;rdquo; or &amp;ldquo;what does error code -31 mean&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Authors on the internet know that. They try to keep blog posts short and interesting. A blog or wiki will contain posts that were written in minutes or hours. Good ones might have been reviewed by the author a few times, but generally, they are cranked out pretty fast. That is great since knowledge, especially regarding computers, changes constanly and quickly. But it still means that most articles in blogs and wikis are more shallow and/or of lower overall quality than most books.&lt;/p&gt;

&lt;p&gt;A good technical book, on the other hand, is a huge project. Authors often spend several years on a single book. It is edited and reviewed by other experts. Publishers put a lot of money into writing, editing, printing and avertising it. Competition amongst publishers forces them to have an actual strategy when producing a book. It will be structured in a way that makes sense and is readable. Errors are difficult to correct and therefore the matter has to be researched with care. It might have code examples and tools on a CD to get started right away. The moment you are holding a book in your hand, you can already be pretty sure that it has undergone a certain degree of thought and review by some people.&lt;/p&gt;

&lt;h1 id=&#34;toc_1&#34;&gt;finding good books&lt;/h1&gt;

&lt;p&gt;I am aware that there are also tons of crappy books out there. Ones that are hard to understand, boring to read or simply just sloppy attempts to make money off fancy buzzwords. Some publishers keep bringing out new &amp;ldquo;editions&amp;rdquo; of popular books with minor changes only to get people to buy them a second time. But even bad books have gone through some process or another, and people generally do not invest money into a project such as a book without having some confidence that people will buy them so they can (at least) get their money back. That said, how many blogs are there on the internet that are hardly read by anybody? (Tip: you are looking at one right now) It is easy to write crappy blogs, but it costs money to publish crappy books.&lt;/p&gt;

&lt;figure &gt;
    
    &lt;p&gt;&lt;a href=&#34;/img/blogger/good-book-vs-bad-book.jpeg&#34;&gt;
  &lt;img src=&#34;/img/blogger/good-book-vs-bad-book.jpeg&#34;  alt=&#34;User ratings, like on Amazon, say a lot&#34; width=&#34;400em&#34;  /&gt;
  &lt;/a&gt;&lt;/p&gt;

&lt;/figure&gt;

&lt;div class=&#34;clearboth&#34;&gt;&lt;/div&gt;

&lt;p&gt;Fortunately, it is very easy to distinguish good books from bad ones. Most websites that sell books allow for users to submit ratings - read them! People who rate stuff on the web are either really happy about it, or really pissed off. Why else would you actually sit down and spend valuable minutes writing a review or clicking stars if you were not either psyched or mad. So if you find a book. e.g. on Amazon, that has 11 ratings, and 9 of those gave the book a good review, you can be farely sure that it is worth reading.&lt;/p&gt;

&lt;p&gt;Aside from those ratings, it is usually even easier and faster to just do the same thing you always do when you need a quick answer: enter &amp;ldquo;best book &lt;em&gt;[MyTopic]&lt;/em&gt;&amp;rdquo; on &lt;a href=&#34;http://lmgtfy.com/?q=best+book+scala&#34;&gt;Google&lt;/a&gt; or &lt;a href=&#34;http://stackoverflow.com/search?q=best+book+scala&#34;&gt;StackOverflow&lt;/a&gt; and you can be farely sure to find various recommendations. Check the ratings and reviews for those on your favorite book sale site. I do this all the time and have not been dissapointed yet.&lt;/p&gt;

&lt;figure &gt;
    
    &lt;p&gt;&lt;a href=&#34;/img/blogger/book-so.jpeg&#34;&gt;
  &lt;img src=&#34;/img/blogger/book-so.jpeg&#34;  alt=&#34;StackOverflow book discussion&#34; width=&#34;450em&#34;  /&gt;
  &lt;/a&gt;&lt;/p&gt;

&lt;/figure&gt;

&lt;div class=&#34;clearboth&#34;&gt;&lt;/div&gt;

&lt;h1 id=&#34;toc_2&#34;&gt;The &lt;em&gt;real&lt;/em&gt; reason why many engineers do not like to read books&lt;/h1&gt;

&lt;p&gt;There is another, much more important reason why many engineers prefer to skim over blogs and do Google searches instead of reading books. &lt;em&gt;Because they are lazy bastards.&lt;/em&gt; You need to dedicate some of your precious time to read a book. You might have to bite the bullet and read chapters that are not full of witty jokes or comic strips or pictures of cats making funny faces. If you want to finish it in time to actually use whatever you can learn from it, you might have to read in it at home instead of doing other important stuff like watching The Big Bang Theory.&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s right, reading a book is not always a quick answer. Instead, it is actually learning. Remember back in school, when all the teachers were telling you &amp;ldquo;learn for life, not for tests&amp;rdquo; or saying crazy stuff like &amp;ldquo;you never stop learning, even after school&amp;rdquo;? This is it. The ugly truth. &lt;em&gt;They were right.&lt;/em&gt; Now stop whining and behave like a professional. If you want to be considered a professional engineer - and I am sure you really want to be paid like one - then stop wasting time and &lt;em&gt;read a book for god&amp;rsquo;s sake.&lt;/em&gt; &lt;a href=&#34;http://en.wikipedia.org/wiki/RTFM&#34;&gt;RTFM&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Some of mankind&amp;rsquo;s most important knowledge is in books. They have helped us learn for thousands of years. Blogs and whatnot are good for some things, but there is still no better way to really learn about a topic than reading a good &amp;ldquo;old&amp;rdquo; book.&lt;/p&gt;

&lt;figure &gt;
    
    &lt;p&gt;&lt;a href=&#34;/img/blogger/lzy-engynrr.jpeg&#34;&gt;
  &lt;img src=&#34;/img/blogger/lzy-engynrr.jpeg&#34;   width=&#34;350em&#34;  /&gt;
  &lt;/a&gt;&lt;/p&gt;

&lt;/figure&gt;

&lt;div class=&#34;clearboth&#34;&gt;&lt;/div&gt;

&lt;h1 id=&#34;toc_3&#34;&gt;PS&lt;/h1&gt;

&lt;p&gt;No, getting the eBook/PDF instead and skimming over it on your PC/smartphone/reader just like you would do with a way-too-long blog post is not going to make it better. And &lt;a href=&#34;http://osherove.com/blog/2009/9/22/steal-my-book.html&#34;&gt;ripping that eBook from questionable sources&lt;/a&gt; on the web because you are too cheap to spend 40 bucks on improving your skills should really make you wonder why anyone should consider you to be a professional in the first place.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>